version: "0.1"

services:
  arrowhead-database:
    extends:
      file: arrowhead-core/docker-compose.yaml
      service: arrowhead-database

  serviceregistry-healthcheck:
    container_name: serviceregistry-healthcheck
    build: 
      context: serviceregistry-healthcheck
      dockerfile: Dockerfile
    environment:
      CERT_FILE_PATH: ./certificates/sysop-cert.pem
      KEY_FILE_PATH: ./certificates/sysop-key.pem
    env_file:
      - .env
    
  arrowhead-serviceregistry:
    container_name: arrowhead-serviceregistry
    image: aitiaiiot/arrowhead-system:4.6.1
    environment:
      SYSTEM_NAME: serviceregistry
    env_file:
      - .enviroment.arrowheadcore.env
    volumes:
      - ./arrowhead-core/serviceregistry/application.properties:/opt/arrowhead/application.properties
      - ./certificates/truststore.p12:/opt/arrowhead/certificates/truststore.p12
      - ./certificates/serviceregistry.p12:/opt/arrowhead/certificates/serviceregistry.p12
    ports:
      - 8443:8443
  
  arrowhead-authorization:
    container_name: arrowhead-authorization
    image: aitiaiiot/arrowhead-system:4.6.1
    environment:
      SYSTEM_NAME: authorization
    env_file:
      - .enviroment.arrowheadcore.env
    volumes:
      - ./arrowhead-core/authorization/application.properties:/opt/arrowhead/application.properties
      - ./certificates/truststore.p12:/opt/arrowhead/certificates/truststore.p12
      - ./certificates/authorization.p12:/opt/arrowhead/certificates/authorization.p12
    ports:
      - 8445:8445
      
  arrowhead-orchestrator:
    container_name: arrowhead-orchestrator
    image: aitiaiiot/arrowhead-system:4.6.1
    environment:
      SYSTEM_NAME: orchestrator
    env_file:
      - .enviroment.arrowheadcore.env
    volumes:
      - ./arrowhead-core/orchestrator/application.properties:/opt/arrowhead/application.properties
      - ./certificates/truststore.p12:/opt/arrowhead/certificates/truststore.p12
      - ./certificates/orchestrator.p12:/opt/arrowhead/certificates/orchestrator.p12
    ports:
      - 8441:8441

  work-handler:
    container_name: work-handler
    ports:
      - "8001:8001"
    build: 
      context: work-handler
      dockerfile: ../work-handler.Dockerfile
    depends_on:
      serviceregistry-healthcheck:
        condition: service_completed_successfully
    env_file:
      - .env
    volumes:
      - ./certificates:/app/certificates
      - ./.enviroment.work-handler.env:/app/.env

  digital-twin-hub:
    container_name: digital-twin-hub
    ports:
      - "8080:8080"
    build: 
      context: digital-twin-hub
      dockerfile: ../digital-twin-hub.Dockerfile
    depends_on:
      serviceregistry-healthcheck:
        condition: service_completed_successfully
    env_file:
      - .env
    volumes:
      - ./certificates:/app/certificates
      - ./.enviroment.digital-twin-hub.env:/app/.env

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.12.12
    ports:
      - "30001:5672"

  mongodb:
    container_name: mongodb
    image: mongo:latest
    ports:
      - "30000:27017"
    volumes:
      - mongo-data:/data/db

  spark-master:
    build: 
      context: apache-spark
      dockerfile: Dockerfile
    container_name: spark-master
    command: bin/spark-class org.apache.spark.deploy.master.Master
    env_file:
      - .env
      - .enviroment.apache-spark.env
    ports:
      - "9090:8080"
      - "7077:7077"
    volumes:
      - ./apache-spark/applications:/opt/bitnami/spark/applications
      - ./apache-spark/data:/opt/bitnami/spark/data
      - ./certificates:/opt/bitnami/spark/applications/certificates

  spark-worker:
    build: 
      context: apache-spark
      dockerfile: Dockerfile
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    depends_on:
      - spark-master
    environment:
      SPARK_MODE: worker
      SPARK_WORKER_CORES: 2
      SPARK_WORKER_MEMORY: 2g
      SPARK_MASTER_URL: spark://spark-master:7077
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 10s
    env_file:
      - .env
      - .enviroment.apache-spark.env
    volumes:
      - ./apache-spark/data:/opt/bitnami/spark/data
      - ./certificates:/opt/bitnami/spark/applications/certificates
    
  
volumes:
  arrowhead-database:
  mongo-data: